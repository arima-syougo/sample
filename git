集中型では一つのものだけ、一つ消えると全部消える。
代わりに比較的わかりやすい。


Git のような分散型。
本体のリモートリポジトリ以外に、
自分のパソコン内にローカルリポジトリがある。
オフラインでも作業できる部分が多い。

GitとGitHabは違う。
Gitを利用したもの。

CUI  
キャラクターユーザーインターフェース
黒い画面で、そうさすUIのこと
Cは文字の意味 文字でパソコンを操作するイメージ。

GUI
グラフィカルユーザーインターフェース。
スマホをタッチで動かしたり、マウスでクリックしたりすることなど。


作業ディレクトリ → 作業するフォルダのこと
リポジトリ → ソースコードなどの保管庫
ローカルリポジトリ  自分の中の方 プロジェクトごとに複数可能
リモートリポジトリ   パソコン上などのもの


コマンド

init  リポジトリを新規作成するときに使う
clone サーバー上のものをダウンロードするとき
add ステージ  どれだけ編集したかを記録しているもの。
commit -m "コメント"  ローカルリポジトリにファイルを保存すること

push リモートりポジとりにアップロード
push リモート名 ブランチ名

pull pushの逆 リモートのものをダウンロードする
pull リモート名 ブランチ名

fetch 更新があるかどうか

branch 
branch ブランチ名
checkout ブランチ名

merge 結合したいブランチ名


バージョン管理 3つのエリアからなる
作業ディレクトリ
プログラムの変更をおこなう

add ↓

ステージングエリア
変更をまとめる 結構大事 意味のあるまとまりにする

commit ↓

ローカルリポジトリ
まとめた変更を保存

Push ↓     Pull ↑

リモートリポジトリ


ブランチ

初期ブランチはmainという名前
mainは公開バージョン

いくらブランチのみを変更してもmainに影響がないなら意味がない
マージをすれば、mainに変更を合わせる頃ができる。統合、

公開バージョンに影響を与えずに改善できる。

git branch   
git checkout
git merge


GitHub 

プルリクエスト
プルリクエストでマージすることが多い。
コードの品質を高めることができる。
一旦確認をお願いすることができる。
